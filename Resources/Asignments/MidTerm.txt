Testing types


1) Manual Testing
2) functional Testing
3) Integration Testing
4) Unit Testing

points:
• Unit tests should not require access to any external systems such as network, databases, etc. 
• All external systems such as database, file server, etc. are mocked out using specific test APIs and test data.


 Integration tests verify that interaction between multiple components (applications, services, modules, etc.) is working as expected.

Continous Integration

what is static and dynamic tests

static test: can be done without using code --->> compile time testing or something like that????

dynamic test: when the code is in operation mode, and done in run time environment.

Infrastructure as code: A fundamental principle of DevOps is to treat infrastructure
 the same way developers treat code.

The default VPC on both AWS and GCP will include an internet gateway.
An internet gateway enables your instances to connect to the internet.

A VPC allows you to create or configure following: • firewall • routing table • public or private subnets • network gateway


Network interface
You can create a network interface, attach it to an instance, detach it from an instance, 
and attach it to another instance. The attributes of a network interface follow it as it's
attached or detached from an instance and reattached to another instance. When you move a 
network interface from one instance to another, network traffic is redirected to the new 
instance. 
You can also modify the attributes of your network interface, including changing its security groups and managing its IP addresses.

Every instance in a VPC has a default network interface, called the primary network interface (eth0). You cannot detach a primary network 
interface from an instance. You can create and attach additional network interfaces. The maximum number of network interfaces that you can
 use varies by instance type. For more information, see IP Addresses Per Network Interface Per Instance Type. 

ref: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-eni.html

Route table

ref: https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Route_Tables.html


Internet Gateways
An internet gateway is a horizontally scaled, redundant, and highly available VPC component that allows communication between instances 
in your VPC and the internet. It therefore imposes no availability risks or bandwidth constraints on your network traffic. 
An internet gateway serves two purposes: to provide a target in your VPC route tables for internet-routable traffic, and to
perform network address translation (NAT) for instances that have been assigned public IPv4 addresses. 

ref: https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Internet_Gateway.html

horizontal scale: adding new resources
vertical scale: adding more computation power

Destination => IP address/CIDR range
Target => Where you want to send the traffic for the specified destination 
(e.g. if destination is my local subnet, mention target as "local")

Cloud Computing:
“... a style of computing in which scalable and elastic IT-enabled capabilities are
 delivered as a service to external customers using Internet technologies.”

" a standardized IT capability (services, software, or infrastructure) delivered via
  Internet technologies in a pay-per-use, self-service way.”


----------Cloud Characteristics------------

1) On Demand Self Service: freedom of self provsion, can access coud based IT resources,
                          Once configured, then automate, self configured

2) Broad Netowrk Access: wide, ubiqutous access using devices,transport protocols,interfaces,security nd technologies;

3) Resource(multiTenancy): multitenancy--->  char of a software program that enables instance of a program to serve multiple consumer(tenants),
                           each is isolated from the other
                           ----> cloud providers pools IT resources to serve multiple consumers by using multi tenancy 
                           models(models rely on virtualization) 
4) Elasticity: ability of automatic scaling  in realtime or based on pre determined factors
5) Measured Usage: ability to keep track of your IT resources.


-----------CLOUD DELIVERY MODELS---------

1) IaaS: INfrastructure as service---> provide IT environment, like hardware,metwork,OS resources
                                  ----> consumer demand based(gives freedom to choose)
                                  ex: AWS, Azure,GCP
                                
2) Paas: Platform as a service---> noneed to create resource, a platform will be provided to work.
                              ----> consumer has less or no control over resources
                              ex: heroku, google app engine,
3) Saas: Software as a service: software program positioned as a shared cloud service.
                                ex: github, gmail

--------------Cloud deployment Models----------

1) public: insfrastructure provsioned for open use by public
2) private:: privately for a single organization , full control
3) community: similar to public, restricted to a community of cloud consumers
4) hybrid: comprise of 2 or more deploymenys models

----------STORAGE-----------

1)Block Storage ( blocK STORAGE): just like your file sys on your pc(fat32.,ntfs etc)
                              OS  is the intermediate between application and underlying file systems

                        Accessing BLS: req(rd,write) made to OS-----> OS fwd req to file sys-----> the path of the file is 
                                      translated to block 
                            why we need block: DB should have access for rd,wr for persistence access
                
                Block storage on AWS: 1) NAS(network attached storage), EBS is the service
                                      2) Instance storage

EBS: You can use block-level storage only in combination with an VM (EC2) instance where the OS runs
when EBS: 1) application needed persistence block storage,(LIke DB,data warehouse )
          2)  low latency interactive applications , that demad high IOPS,throughput

Lifetime of EBS:1) you can use EBS like your HDD, use it when u need it.
                2) they aren't a part of EC2 instance, terminate Ec2 or not . EBS will be there for you
availability: 1) designed for 99.999 percent
              2) EBS creates a replica of its, to deal with failure

Snapshots:
--->Amazon EBS provides the ability to save point-in-time snapshots of your volumes to Amazon S3
--->only the changes in your EBS are stores while creating the next snapshot,all the snapshots are complete within itself

Amazon EBS encryption provides seamless support for data-at-rest and data-in-transit between EC2 instances and EBS volumes.

EC2 Instance Store: provide temp block level storage,storage is located on disks that are physically attached to the host computer
             Uses:for temp data, cache,buffers,applications that replicates there data to several servers

 An instance store consists of one or more instance store volumes exposed as block devices

lifetme:  persists only during the lifetime of its associated instance
         if instance reboots, data reamins. It will lost if there is a disk failure,instance stop,instance terminates
        NO encryption

EFS(elastic file system): file storage sys for EC2, mounted to EC2, can provide common access to multiple EC2 instance
                        when: mult-threaded application, concurrent data access
                    Feature: 1)  Automatic (highly)scaling in real time as per need for your applications
                             2) cannto be a root volume, data in EFS replicated accross multiple avail zones
                        used cases: big data analytics,media processing,web services

BLock storage: EBS, instance store,EFS




---------to Study for Sure---------

linux comamnds

read write access , all the rigths

NoSQL, CAP theorem

TCP vs UDP

EC2
database
S3 
netwr


 ------------- doubts-----------

 1)  Historically, server configuration and application deployment has been a 
 predominantly a manual process. Environments become nonstandard, and reproducing an environment when issue arises is difficult.

2) destination vs target'

host computers, store

